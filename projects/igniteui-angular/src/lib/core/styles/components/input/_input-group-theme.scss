////
/// @group themes
/// @access public
/// @author <a href="https://github.com/simeonoff" target="_blank">Simeon Simeonoff</a>
////

/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.
/// @param {Color} $idle-text-color [rgba(0, 0, 0, .54)] - The input text color in the idle state.
/// @param {Color} $filled-text-color [rgba(0, 0, 0, .87)] - The input text color in the filled state.
/// @param {Color} $focused-text-color [rgba(0, 0, 0, .87)] - The input text color in the focused state.
/// @param {Color} $disabled-text-color [rgba(0, 0, 0, .38)] - The input text color in the disabled state.
///
/// @param {Color} $idle-secondary-color [rgba(0, 0, 0, .54)] - The label color in the idle state.
/// @param {Color} $filled-secondary-color [rgba(0, 0, 0, .54] - The label color in the filled state.
/// @param {Color} $focused-secondary-color [primary 500] - The label color in the focused state.
///
/// @param {Color} $idle-bottom-line-color [rgba(0, 0, 0, .54)] - The bottom line and border colors in the idle state.
/// @param {Color} $hover-bottom-line-color [rgba(0, 0, 0, .87)] - The bottom line and border colors in the hover state.
/// @param {Color} $focused-bottom-line-color [primary 500] - The bottom line and border colors in the focused state.
/// @param {Color} $interim-bottom-line-color [12% of primary 500] - The bottom line and border colors during the to-focused transition.
/// @param {Color} $disabled-bottom-line-color [rgba(0, 0, 0, .42)] - The bottom line and border colors in the disabled state.
/// @param {Color} $disabled-border-color [6% of rgba(0, 0, 0, .38)] - The disabled border color for input groups of type border.
///
/// @param {Color} $box-background [rgba(0, 0, 0, .06)] - The background color of an input group of type box.
/// @param {Color} $box-disabled-background [rgba(0, 0, 0, .03)] - The background color of an input group of type box in the disabled state.
///
/// @param {Color} $border-background [transparent] - The background color of an input group of type border.
/// @param {Color} $border-disabled-background [rgba(0, 0, 0, .03)] - The background color of an input group of type border in the disabled state.
///
/// @param {Color} $search-background [white] - The background color of an input group of type search.
/// @param {Color} $search-disabled-background [white] - The background color of an input group of type search in the disabled state.
/// @param {Color} $search-shadow-color [rgba(0, 0, 0, .54)] - The shadow color of an input group of type search.
/// @param {Color} $search-disabled-shadow-color [rgba(0, 0, 0, .12)] - The shadow color of an input group of type search in the disabled state.
///
/// @param {Color} $success-secondary-color [igx-color($palette, 'success')] - The success color used in the valid state.
/// @param {Color} $warning-secondary-color [igx-color($palette, 'warn')] - The warning color used in the warning state.
/// @param {Color} $error-secondary-color [igx-color($palette, 'error)] - The error color used in the error state.
///
/// @param {String} $variant ['dark'] - Can be either 'dark' or 'light'. Use 'light' when the input is used on dark backgrounds.
///
/// @requires extend
/// @requires igx-color
///
/// @example scss Change the focused border and label colors
///   $my-input-group-theme: igx-input-group-theme($focused-secondary-color: pink, $focused-bottom-line-color: pink);
///   // Pass the theme to the igx-input-group component mixin
///   @include igx-input-group($my-input-group-theme);
@function igx-input-group-theme(
    $palette: $default-palette,
    $preset: null,

    $idle-text-color: null,
    $filled-text-color: null,
    $focused-text-color: null,
    $disabled-text-color: null,

    $idle-secondary-color: null,
    $filled-secondary-color: null,
    $focused-secondary-color: null,

    $idle-bottom-line-color: null,
    $hover-bottom-line-color: null,
    $filled-bottom-line-color: null,
    $focused-bottom-line-color: null,
    $interim-bottom-line-color: null,
    $disabled-bottom-line-color: null,
    $disabled-border-color: null,

    $box-background: null,
    $box-disabled-background: null,
    $border-background: null,
    $border-disabled-background: null,

    $search-background: null,
    $search-disabled-background: null,
    $search-shadow-color: null,
    $search-disabled-shadow-color: null,

    $success-secondary-color: null,
    $warning-secondary-color: null,
    $error-secondary-color: null,

    $placeholder-color: null,
    $disabled-placeholder-color: null,

    $variant: 'dark'
) {
    $name: 'igx-input-group';

    $dark-theme: (
        name: $name,

        idle-text-color: igx-color($palette, 'grays', 600),
        filled-text-color: igx-color($palette, 'grays', 900),
        focused-text-color: igx-color($palette, 'grays', 900),
        disabled-text-color: igx-color($palette, 'grays', 500),

        idle-secondary-color: igx-color($palette, 'grays', 600),
        filled-secondary-color: igx-color($palette, 'grays', 600),
        focused-secondary-color: igx-color($palette, 'primary'),

        idle-bottom-line-color: igx-color($palette, 'grays', 600),
        hover-bottom-line-color: igx-color($palette, 'grays', 900),
        filled-bottom-line-color: igx-color($palette, 'grays', 600),
        focused-bottom-line-color: igx-color($palette, 'primary'),
        interim-bottom-line-color: rgba(igx-color($palette, 'primary'), .12),
        disabled-bottom-line-color: rgba(0, 0, 0, .42),
        disabled-border-color: rgba(igx-color($palette, 'grays', 500), .06),

        box-background: rgba(0, 0, 0, .06),
        box-disabled-background: rgba(0, 0, 0, .03),

        border-background: transparent,
        border-disabled-background: rgba(0, 0, 0, .03),

        search-background: white,
        search-disabled-background: white,
        search-shadow-color: igx-color($palette, 'grays', 600),
        search-disabled-shadow-color: igx-color($palette, 'grays', 300),

        success-secondary-color: igx-color($palette, 'success'),
        warning-secondary-color: igx-color($palette, 'warn'),
        error-secondary-color: igx-color($palette, 'error'),
        placeholder-color: igx-color($palette, 'grays', 500),
        disabled-placeholder-color: igx-color($palette, 'grays', 400)
    );

    $light-theme: (
        name: $name,

        idle-text-color: white,
        filled-text-color: white,
        focused-text-color: white,
        disabled-text-color: rgba(255, 255, 255, .5),

        idle-secondary-color: rgba(255, 255, 255, .7),
        filled-secondary-color: rgba(255, 255, 255, .7),
        focused-secondary-color: igx-color($palette, 'primary'),

        idle-bottom-line-color: rgba(255, 255, 255, .7),
        hover-bottom-line-color: white,
        filled-bottom-line-color: rgba(255, 255, 255, .7),
        focused-bottom-line-color: igx-color($palette, 'primary'),
        interim-bottom-line-color: rgba(igx-color($palette, 'primary'), .12),
        disabled-bottom-line-color: rgba(255, 255, 255, .7),
        disabled-border-color: rgba(rgba(255, 255, 255, .5), .06),

        box-background: rgba(255, 255, 255, .1),
        box-disabled-background: rgba(255, 255, 255, .06),

        border-background: transparent,
        border-disabled-background: rgba(255, 255, 255, .06),

        search-background: rgba(255, 255, 255, .1),
        search-disabled-background: rgba(255, 255, 255, .06),
        search-shadow-color: igx-color($palette, 'grays', 600),
        search-disabled-shadow-color: igx-color($palette, 'grays', 300),

        success-secondary-color: igx-color($palette, 'success'),
        warning-secondary-color: igx-color($palette, 'warn'),
        error-secondary-color: igx-color($palette, 'error'),
        placeholder-color: #999,
        disabled-placeholder-color: #777


    );

    $default-theme: map-get((
        dark: $dark-theme,
        light: $light-theme
    ), $variant);

    @if $preset {
        $default-theme: map-get($preset, map-get($default-theme, 'name'));
    }

    @return extend($default-theme, (
        palette: $palette,

        idle-text-color: $idle-text-color,
        filled-text-color: $filled-text-color,
        focused-text-color: $focused-text-color,
        disabled-text-color: $disabled-text-color,

        idle-secondary-color: $idle-secondary-color,
        filled-secondary-color: $filled-secondary-color,
        focused-secondary-color: $focused-secondary-color,

        idle-bottom-line-color: $idle-bottom-line-color,
        hover-bottom-line-color: $hover-bottom-line-color,
        filled-bottom-line-color: $filled-bottom-line-color,
        focused-bottom-line-color: $focused-bottom-line-color,
        interim-bottom-line-color: $interim-bottom-line-color,
        disabled-bottom-line-color: $disabled-bottom-line-color,
        disabled-border-color: $disabled-border-color,

        box-background: $box-background,
        box-disabled-background: $box-disabled-background,

        border-background: $border-background,
        border-disabled-background: $border-disabled-background,

        search-background: $search-background,
        search-disabled-background: $search-disabled-background,
        search-shadow-color: $search-shadow-color,
        search-disabled-shadow-color: $search-disabled-shadow-color,

        success-secondary-color: $success-secondary-color,
        warning-secondary-color: $warning-secondary-color,
        error-secondary-color: $error-secondary-color,
        placeholder-color: $placeholder-color,
        disabled-placeholder-color: $disabled-placeholder-color,

        variant: $variant
    ));

    @if not($placeholder-color) and $box-background {
        $placeholder-color: text-contrast($box-background);
    }

    @if not($placeholder-color) and $search-background {
        $placeholder-color: text-contrast($search-background);
    }
}



/// @param {Map} $theme - The theme used to style the component.
/// @requires {mixin} igx-root-css-vars
/// @requires igx-color
/// @requires igx-elevation
/// @requires $elevations
/// @requires em
/// @requires {mixin} ellipsis
/// @requires --var
@mixin igx-input-group($theme) {
    @include igx-root-css-vars($theme);

    $palette: map-get($theme, 'palette');

    $transition-timing: .25s $ease-out-cubic;
    $search-shadow: igx-elevation($elevations, 1);
    $search-shadow-hover: igx-elevation($elevations, 2);
    $search-shadow-disabled: igx-elevation($elevations, 1);
    $required-symbol: '*';
    $required-symbol-margin: 2px;

    // This should become configurable by the user.
    $group-bundle-border-radius: 4px;

    // This creates an inverse relationship
    // between the value of the base scale size and
    // the sizing of all inner elements.
    // i.e. the bigger the scale size,
    // the smaller the padding of the inner items.
    $base-scale-size: (
        'comfortable': 16px,
        'cosy': 19px,
        'compact': 22px
    );

    $hint-padding-top: rem(6px, map-get($base-scale-size, 'comfortable'));
    $hint--box-margin: rem(12px, map-get($base-scale-size, 'comfortable'));

    %form-group-display {
        position: relative;
        display: block;
        color: --var($theme, 'idle-text-color');

        igx-prefix,
        [igxPrefix] {
            @extend %form-group-prefix;
            outline-style: none;
        }

        igx-suffix,
        [igxSuffix] {
            @extend %form-group-suffix;
            outline-style: none;
        }
    }

    %form-group-display--cosy {
        igx-prefix,
        [igxPrefix] {
            @extend %form-group-prefix--cosy;
        }

        igx-suffix,
        [igxSuffix] {
            @extend %form-group-suffix--cosy;
        }
    }

    %form-group-display--compact {
        igx-prefix,
        [igxPrefix] {
            @extend %form-group-prefix--compact;
        }

        igx-suffix,
        [igxSuffix] {
            @extend %form-group-suffix--compact;
        }
    }

    %form-group-display--no-margin {
        margin-top: 0;

        igx-prefix,
        [igxPrefix] {
            @extend %form-group-prefix--box;
        }

        igx-suffix,
        [igxSuffix] {
            @extend %form-group-suffix--box;
        }
    }

    %form-group-display--no-margin-cosy {
        igx-prefix,
        [igxPrefix] {
            @extend %form-group-prefix--box-cosy;
        }
    }

    %form-group-display--no-margin-compact {
        igx-prefix,
        [igxPrefix] {
            @extend %form-group-prefix--box-compact;
        }
    }

    %form-group-display--error {
        igx-prefix,
        [igxPrefix] {
            @extend %form-group-prefix--error;
        }

        igx-suffix,
        [igxSuffix] {
            @extend %form-group-suffix--error;
        }
    }

    %form-group-box-wrapper {
        border-radius: $group-bundle-border-radius;
        overflow: hidden;
    }

    %form-group-display--hover {
        cursor: pointer;
    }

    %form-group-display--disabled {
        pointer-events: none;
        user-select: none;
        color: --var($theme, 'disabled-text-color');
    }

    %form-group-bundle {
        position: relative;
        display: flex;
        align-items: center;
        flex-flow: row nowrap;
        padding-top: rem(18px, map-get($base-scale-size, 'comfortable'));
        box-shadow: inset 0 -1px 0 0 --var($theme, 'idle-bottom-line-color');
        transition: box-shadow $transition-timing, color $transition-timing;
    }

    %form-group-bundle--cosy {
        padding-top: rem(18px, map-get($base-scale-size, 'cosy'));
    }

    %form-group-bundle--compact {
        padding-top: rem(18px, map-get($base-scale-size, 'compact'));
    }

    %form-group-bundle--box {
        padding: 0 rem(16px, map-get($base-scale-size, 'comfortable'));
        background: --var($theme, 'box-background');
        box-shadow: inset 0 -2px 0 0 --var($theme, 'idle-bottom-line-color');

        %form-group-label--box + %form-group-input--box {
            transform: translateY(0);
        }
    }

    %form-group-bundle--box-cosy {
        padding: 0 rem(16px, map-get($base-scale-size, 'cosy'));
    }

    %form-group-bundle--box-compact {
        padding: 0 rem(16px, map-get($base-scale-size, 'compact'));
    }

    %form-group-bundle--hover {
        cursor: pointer;
        box-shadow: inset 0 -2px 0 0 --var($theme, 'hover-bottom-line-color');
    }

    %form-group-bundle--focus {
        caret-color: --var($theme, 'focused-secondary-color');
        box-shadow: inset 0 -2px 0 0 --var($theme, 'interim-bottom-line-color');
    }

    %form-group-bundle--success {
        caret-color: --var($theme, 'success-secondary-color');
        box-shadow: inset 0 -1px 0 0 --var($theme, 'success-secondary-color');
    }

    %form-group-bundle--error {
        caret-color: --var($theme, 'error-secondary-color');
        box-shadow: inset 0 -1px 0 0 --var($theme, 'error-secondary-color');
    }

    %form-group-bundle--disabled {
        box-shadow: none;
        background-image: linear-gradient(to right, --var($theme, 'disabled-bottom-line-color') 40%, transparent 10%);
        background-position: bottom;
        background-size: 4px 1px;
        background-repeat: repeat-x;
    }

    %form-group-bundle--box-disabled {
        background: --var($theme, 'box-disabled-background');
    }

    %form-group-bundle--border {
        padding: 0 rem(16px, map-get($base-scale-size, 'comfortable'));
        box-shadow: inset 0 0 0 1px --var($theme, 'idle-bottom-line-color');
        border-radius: $group-bundle-border-radius;
        background: --var($theme, 'border-background');

        %form-group-label--box + %form-group-input--box {
            transform: translateY(0);
        }
    }

    %form-group-bundle--border-cosy {
        padding: 0 rem(16px, map-get($base-scale-size, 'cosy'));
    }

    %form-group-bundle--border-compact {
        padding: 0 rem(16px, map-get($base-scale-size, 'compact'));
    }

    %form-group-bundle-border--hover {
        box-shadow: inset 0 0 0 2px --var($theme, 'idle-text-color');
    }

    %form-group-bundle-border--focus {
        box-shadow: inset 0 0 0 2px --var($theme, 'focused-bottom-line-color');
    }

    %form-group-bundle-border--error {
        box-shadow: inset 0 0 0 2px --var($theme, 'error-secondary-color');
    }

    %form-group-bundle-border--success {
        box-shadow: inset 0 0 0 2px --var($theme, 'success-secondary-color');
    }

    %form-group-bundle-border--disabled {
        background: --var($theme, 'border-disabled-background');
        box-shadow: inset 0 0 0 1px --var($theme, 'disabled-border-color');
    }

    %form-group-bundle--search {
        padding: 0 rem(16px, map-get($base-scale-size, 'comfortable'));
        border-radius: $group-bundle-border-radius;
        border-bottom: none;
        background: --var($theme, 'search-background');
        box-shadow: $search-shadow;

        %form-group-label--box + %form-group-input--box {
            transform: translateY(0);
        }
    }

    %form-group-bundle--search-cosy {
        padding: 0 rem(16px, map-get($base-scale-size, 'cosy'));
    }

    %form-group-bundle--search-compact {
        padding: 0 rem(16px, map-get($base-scale-size, 'compact'));
    }

    %form-group-bundle-search--hover {
        box-shadow: $search-shadow-hover;
    }

    %form-group-bundle-search--focus {
        box-shadow: $search-shadow-hover;
    }

    %form-group-bundle-search--error {
        box-shadow: $search-shadow-hover;
    }

    %form-group-bundle-search--success {
        box-shadow: $search-shadow-hover;
    }

    %form-group-bundle-search--disabled {
        background: --var($theme, 'search-disabled-background');
        box-shadow: $search-shadow-disabled;
    }

    %form-group-bundle-main {
        position: relative;
        flex-grow: 1;
    }

    %form-group-bundle-main--box {
        padding-top: rem(18px, map-get($base-scale-size, 'comfortable'));
    }

    %form-group-bundle-main--box-cosy {
        padding-top: rem(18px, map-get($base-scale-size, 'cosy'));
    }

    %form-group-bundle-main--box-compact {
        padding-top: rem(18px, map-get($base-scale-size, 'compact'));
    }

    %form-group-label {
        @include ellipsis();
        position: absolute;
        width: 100%;
        transform: translateY(50%); /* 8px, base is 16px */
        line-height: rem(16px, map-get($base-scale-size, 'comfortable')) !important;
        height: rem(18px, map-get($base-scale-size, 'comfortable'));
        backface-visibility: hidden;
        will-change: transform;
        transform-origin: top left;
        transition: transform $transition-timing, color $transition-timing;

        [dir='rtl'] & {
            transform-origin: top right;
        }
    }

    %form-group-label--cosy {
        line-height: rem(16px, map-get($base-scale-size, 'cosy')) !important;
        height: rem(18px, map-get($base-scale-size, 'cosy'));
    }

    %form-group-label--compact {
        line-height: rem(16px, map-get($base-scale-size, 'compact')) !important;
        height: rem(18px, map-get($base-scale-size, 'compact'));
    }

    %form-group-label--box {
        transform: translateY(0);
    }

    %form-group-label--float {
        transform: translateY(-50%) scale(.75);
    }

    %form-group-label--fixed {
        transition: color $transition-timing;
    }

    %form-group-label--focus {
        color: --var($theme, 'focused-secondary-color');
    }

    %form-group-label--success {
        color: --var($theme, 'focused-secondary-color');
    }

    %form-group-label--error {
        color: --var($theme, 'error-secondary-color');
    }

    %form-group-label--required {
        &::after {
            content: '#{$required-symbol}';
            font-size: inherit;
            vertical-align: top;
            margin-left: $required-symbol-margin; /* 2px base is 16px */
        }
    }

    %form-group-input {
        position: relative;
        display: block;
        border: none;
        height: rem(32px, map-get($base-scale-size, 'comfortable'));
        padding: 0 0 rem(8px, map-get($base-scale-size, 'comfortable'));
        border-top: rem(8px, map-get($base-scale-size, 'comfortable')) solid rgba(0, 0, 0, 0);
        line-height: 0 !important; /* resets typography styles */
        width: 100%;
        min-width: 0;
        overflow: visible;
        background: transparent;
        color: --var($theme, 'filled-text-color');
        outline-style: none;
        box-shadow: none;

        &::-webkit-input-placeholder {
            padding: 4px 0;
        }

        &::placeholder {
            color: --var($theme, 'placeholder-color');
            opacity: 1;
        }
    }

    %form-group-input--cosy {
        height: rem(32px, map-get($base-scale-size, 'cosy'));
        padding: 0 0 rem(8px, map-get($base-scale-size, 'cosy'));
        border-top: rem(8px, map-get($base-scale-size, 'cosy')) solid rgba(0, 0, 0, 0);
    }

    %form-group-input--compact {
        height: rem(32px, map-get($base-scale-size, 'compact'));
        padding: 0 0 rem(8px, map-get($base-scale-size, 'compact'));
        border-top: rem(8px, map-get($base-scale-size, 'compact')) solid rgba(0, 0, 0, 0);
    }

    %chrome-autofill-fix {
        &:-webkit-autofill,
        &:-webkit-autofill:hover,
        &:-webkit-autofill:focus,
        &:-webkit-autofill:active { -webkit-transition-delay: 99999s; }
    }

    %edge-clear-icon-fix {
        &::-ms-clear {
            display: none;
        }
    }

    %form-group-input--box {
        transform: translateY(-25%);
    }

    %form-group-input--hover {
        cursor: pointer;
    }

    %form-group-input--focus {
        cursor: text;
        color: --var($theme, 'focused-text-color');
    }

    %form-group-input--disabled {
        color: --var($theme, 'disabled-text-color');

        &::placeholder {
            color: --var($theme, 'disabled-placeholder-color');
        }
    }

    %form-group-textarea {
        min-height: rem(82px, map-get($base-scale-size, 'comfortable')); /* 3 lines * 22px + 8px bottom padding + 8px top padding */
        margin-right: -#{rem(16px, map-get($base-scale-size, 'comfortable'))}; /* this fixes resizing in chrome !?!? */
        line-height: normal !important; /* resets typography styles */
        height: auto;
        resize: vertical;
        overflow: hidden;

        [dir='rtl'] & {
            margin-right: initial;
            margin-left: -#{rem(16px, map-get($base-scale-size, 'comfortable'))};
        }
    }

    %form-group-textarea--cosy {
        min-height: rem(82px, map-get($base-scale-size, 'cosy'));
        margin-right: -#{rem(16px, map-get($base-scale-size, 'cosy'))};

        [dir='rtl'] & {
            margin-left: -#{rem(16px, map-get($base-scale-size, 'cosy'))};
        }
    }

    %form-group-textarea--compact {
        min-height: rem(82px, map-get($base-scale-size, 'compact'));
        margin-right: -#{rem(16px, map-get($base-scale-size, 'compact'))};

        [dir='rtl'] & {
            margin-left: -#{rem(16px, map-get($base-scale-size, 'compact'))};
        }
    }

    %form-group-textarea--box {
        width: calc(100% + #{rem(16px, map-get($base-scale-size, 'comfortable')) * 2}); /* add the padding to the width */
        margin: 0 -#{rem(16px, map-get($base-scale-size, 'comfortable'))};
        padding-left: rem(16px, map-get($base-scale-size, 'comfortable'));
        padding-right: rem(16px, map-get($base-scale-size, 'comfortable'));
    }

    %form-group-textarea--box-cosy {
        width: calc(100% + #{rem(16px, map-get($base-scale-size, 'cosy')) * 2}); /* add the padding to the width */
        margin: 0 -#{rem(16px, map-get($base-scale-size, 'cosy'))};
        padding-left: rem(16px, map-get($base-scale-size, 'cosy'));
        padding-right: rem(16px, map-get($base-scale-size, 'cosy'));
    }

    %form-group-textarea--box-compact {
        width: calc(100% + #{rem(16px, map-get($base-scale-size, 'compact')) * 2}); /* add the padding to the width */
        margin: 0 -#{rem(16px, map-get($base-scale-size, 'compact'))};
        padding-left: rem(16px, map-get($base-scale-size, 'compact'));
        padding-right: rem(16px, map-get($base-scale-size, 'compact'));
    }

    %form-group-prefix,
    %form-group-suffix {
        position: relative;
        display: inline-flex;
        align-items: center;
        height: rem(32px, map-get($base-scale-size, 'comfortable'));
        transition: all $transition-timing;
    }

    %form-group-prefix {
        padding: rem(8px, map-get($base-scale-size, 'comfortable'))
            rem(8px, map-get($base-scale-size, 'comfortable'))
            rem(8px, map-get($base-scale-size, 'comfortable'))
            0;

        [dir='rtl'] & {
            padding: rem(8px, map-get($base-scale-size, 'comfortable'))
                0
                rem(8px, map-get($base-scale-size, 'comfortable'))
                rem(8px, map-get($base-scale-size, 'comfortable'));
        }
    }

    %form-group-suffix {
        padding: rem(8px, map-get($base-scale-size, 'comfortable')) 0;
    }

    %form-group-prefix--cosy,
    %form-group-suffix--cosy {
        height: rem(32px, map-get($base-scale-size, 'cosy'));
    }

    %form-group-prefix--compact,
    %form-group-suffix--compact {
        height: rem(32px, map-get($base-scale-size, 'compact'));
    }

    %form-group-prefix--cosy {
        padding: rem(8px, map-get($base-scale-size, 'cosy'))
            rem(8px, map-get($base-scale-size, 'cosy'))
            rem(8px, map-get($base-scale-size, 'cosy'))
            0;

        [dir='rtl'] & {
            padding: rem(8px, map-get($base-scale-size, 'cosy'))
                0
                rem(8px, map-get($base-scale-size, 'cosy'))
                rem(8px, map-get($base-scale-size, 'cosy'));
        }
    }

    %form-group-prefix--compact {
        padding: rem(8px, map-get($base-scale-size, 'compact'))
            rem(8px, map-get($base-scale-size, 'compact'))
            rem(8px, map-get($base-scale-size, 'compact'))
            0;

        [dir='rtl'] & {
            padding: rem(8px, map-get($base-scale-size, 'compact'))
                0
                rem(8px, map-get($base-scale-size, 'compact'))
                rem(8px, map-get($base-scale-size, 'compact'));
        }
    }

    %form-group-suffix--cosy {
        padding: rem(8px, map-get($base-scale-size, 'cosy')) 0;
    }

    %form-group-suffix--compact {
        padding: rem(8px, map-get($base-scale-size, 'compact')) 0;
    }

    %form-group-prefix--box,
    %form-group-suffix--box {
        height: 100%;
    }

    %form-group-prefix--box {
        padding: 0 rem(8px, map-get($base-scale-size, 'comfortable')) 0 0;

        [dir='rtl'] & {
            padding: 0 0 0 rem(8px, map-get($base-scale-size, 'comfortable')); /* 8px, base is 16px */
        }
    }

    %form-group-prefix--box-cosy {
        padding: 0 rem(8px, map-get($base-scale-size, 'cosy')) 0 0;

        [dir='rtl'] & {
            padding: 0 0 0 rem(8px, map-get($base-scale-size, 'cosy')); /* 8px, base is 16px */
        }
    }

    %form-group-prefix--box-compact {
        padding: 0 rem(8px, map-get($base-scale-size, 'compact')) 0 0;

        [dir='rtl'] & {
            padding: 0 0 0 rem(8px, map-get($base-scale-size, 'compact')); /* 8px, base is 16px */
        }
    }

    %form-group-suffix--box {
        padding: 0;
    }

    %form-group-prefix--error,
    %form-group-suffix--error {
        color: --var($theme, 'error-secondary-color');
    }

    %form-group-border {
        height: 2px; /* 2px, when base is 16px */
        margin-top: -2px; /* 2px, when base is 16px */
        transform: scaleX(0);
        transform-origin: center;
        background: --var($theme, 'focused-secondary-color');
    }

    %form-group-border--focus {
        transform: scaleX(1);
        transition: transform $transition-timing;
    }

    %form-group-border--success {
        background: --var($theme, 'success-secondary-color');
    }

    %form-group-border--warning {
        background: --var($theme, 'warning-secondary-color');
    }

    %form-group-border--error {
        background: --var($theme, 'error-secondary-color');
    }

    %form-group-border--hidden {
        display: none;
    }

    %form-group-helper {
        position: relative;
        display: flex;
        justify-content: space-between;
        padding-top: rem(6px, map-get($base-scale-size, 'comfortable'));
    }

    %form-group-help--cosy {
        padding-top: rem(6px, map-get($base-scale-size, 'cosy'));
    }

    %form-group-help--compact {
        padding-top: rem(6px, map-get($base-scale-size, 'compact'));
    }

    %form-group-helper--box {
        margin-left: $hint--box-margin; /* 16px, base is 12px */
        margin-right: $hint--box-margin; /* 16px, base is 12px */
    }

    %form-group-helper--success {
        color: --var($theme, 'success-secondary-color');
    }

    %form-group-helper--error {
        color: --var($theme, 'error-secondary-color');
    }

    %form-group-helper-item {
        @include ellipsis();
        position: relative;
        min-width: 0;
        max-width: 100%;
    }

    %form-group-helper-item--start {
        order: 0;
    }

    %form-group-helper-item--end {
        order: 1;
    }
}

/// Adds typography styles for the igx-input-group component.
/// Uses the 'body-1', 'caption'
/// category from the typographic scale.
/// @group typography
/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.
/// @param {Map} $categories [(helper-text: 'caption', input-text: 'subtitle-1')] - The categories from the typographic scale used for type styles.
/// @requires {mixin} igx-type-style
@mixin igx-input-group-typography($type-scale, $categories: (
    helper-text: 'caption',
    input-text: 'subtitle-1')
) {
    $helper-text: map-get($categories, 'helper-text');
    $input-text: map-get($categories, 'input-text');
    $input-text-props: igx-type-scale-category($type-scale, $input-text);

    @include igx-scope('.igx-typography') {
        %form-group-label {
            @include igx-type-style($type-scale, $input-text) {
                // This is embarrassing but there's no other
                // way to extract the font-size the user sets
                // in case they use custom typography :(
                // We need the padding so that the text doesn't get
                // cut off.
                padding-bottom: map-get($input-text-props, 'font-size');
            }
        }

        %form-group-input {
            @include igx-type-style($type-scale, $input-text);
        }

        %form-group-helper {
            @include igx-type-style($type-scale, $helper-text);
        }

        %form-group-prefix,
        %form-group-suffix {
            @include igx-type-style($type-scale, $input-text);
        }
    }
}
